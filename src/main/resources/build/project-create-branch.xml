<?xml version="1.0"?>

<!-- ======================================================================= -->
<!-- Handpay back server build file                                                       -->
<!-- ======================================================================= -->

<project name="project branch" default="foreach" basedir=".">

	<property file="prop-svn.properties" />
	<property environment="env" />
	<import file="project-list.xml" />

	<target name="init">
		<echo message="" />
	</target>

	<target name="foreach" depends="init">
		<echo>branch.name is ${branch.name}</echo>
		<input message="Please enter the branch name:" addproperty="branch.name" />
		<input message="your branch name is [[${branch.name}]], are you sure ? (y or n )" validargs="y,n" addproperty="branch.confirm" />
		<echo>branch.name  new is ${branch.name}</echo>
		<if>
			<equals arg1="${branch.confirm}" arg2="y" />
			<then>
				<echo>you choice is yes!!</echo>
				<foreach target="branch" list="${project.list}" param="project.one" inheritall="true">
				</foreach>
			</then>
			<else>
				<echo>you choice is no!!</echo>
			</else>
		</if>
	</target>

	<target name="branch">
		<propertycopy name="project.name" from="project.name.${project.one}" />
		<echo message="begin branch the project: ${project.name}" />
		<!-- branch the project from trunk -->
		<svn username="${svnant.repository.user}" password="${svnant.repository.passwd}">
			<copy srcUrl="${svnant.repository.url}/${project.name}/trunk" destUrl="${svnant.repository.url}/${project.name}/branches/${project.name}-${branch.name}" message="manual:make branch" />
		</svn>
		<echo message="end branch the project: ${project.name}" />
	</target>

	<!-- =================================================================== -->
	<!-- Cleans up generated stuff                                           -->
	<!-- =================================================================== -->
	<target name="clean" depends="init">
	</target>

</project>

